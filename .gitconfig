[remote "origin"]
	tagOpt = --no-tags
	prune = true
	pruneTags = true
[core]
	whitespace = cr-at-eol,trailing-space,space-before-tab,indent-with-non-tab,tabwidth=4
	preloadIndex = true
	multiPackIndex = true
	splitIndex = true
	commitGraph = true
	autocrlf = false
	safecrlf = false
	hooksPath = .github/git-hooks
	fscache = true
	checkStat = minimal
	trustctime = false
	useBuiltinFSMonitor = false
[commit]
	template = .github/git-hooks/gitmessage.txt
[gc]
	auto = 0
	writeCommitGraph = false
	pruneExpire = 1.weeks.ago
[rerere]
	enabled = true
	autoupdate = false
[lfs "https://github.com/"]
	locksverify = true
[lfs]
	skipdownloaderrors = true
	batch = true
	setlockablereadonly = true
	tustransfers = true
	pruneverifyremotealways = true
	fetchrecentrefsdays = 1
	pruneoffsetdays = 0
	fetchrecentremoterefs = false
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[index]
	threads = 0
[merge]
	conflictstyle = diff3
	stat = false
	tool = p4merge_pb
[blame]
	coloring = highlightRecent
[fetch]
	prune = true
	pruneTags = true
[help]
	autoCorrect = 5
[pack]
	threads = 0
[push]
	default = current
[pull]
	rebase = merges
	ff = only
[receive]
	autogc = false
[rebase]
	autostash = true
[feature]
	manyFiles = true
	experimental = true
[alias]
	fm = !git fetch origin ${1-main}
	ro = !git rebase origin/${1-main} && true
	pf = push --force-with-lease --force-if-includes
	up = !git fm ${1-main} && git ro ${1-main}
	send = !git add -A Source && git commit -a && git push
	pup = !git up ${1-main} && git pf
	s = -c color.status=always status -sb
	state = "!f(){ \
				deco_bold='\\x1b[1m'; \
				deco_invert='\\x1b[7m'; \
				git_status=$(git -c color.status=always status -sb); \
				git_lfs_valid=$(git lfs status --porcelain); \
				echo \"$git_status\"; \
				if [[ -n \"$git_lfs_valid\" ]]; then \
					git_lfs_status=$(git -c color.status=always lfs status); \
					divider='\n------- git-lfs status -------\\x1b[00m'; \
					echo -e \"${deco_bold}${deco_invert}$divider\n\"; \
					echo \"$git_lfs_status\"; \
				fi; \
			}; \
			f"
	deletebranch = !sh -c 'git branch -d $1 | git push origin --delete $1' -
	lard = "!git rev-list --all --objects | sed -n $(git rev-list --objects --all | cut -f1 -d' ' | git cat-file --batch-check | grep blob | sort -n -k 3 | tail -n40 | while read hash type size; do echo -n \"-e s/$hash/$size/p \"; done) | sort -n -k1"
	last = log -1 HEAD
	uncommit = git reset --soft HEAD^
	prettylog =  "!git log --pretty=format:'%C(yellow)%h|%Cred%ad|%Cblue%an|%Cgreen%d %Creset%s' --date=short | column -ts'|' | less -r"
	tree = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	full-verify = fsck --full --strict -v --progress
[checkout]
	optimizenewbranch = true
[am]
	keepcr = true
[reset]
	quiet = true
[status]
	aheadbehind = false
[gui]
	gcwarning = false
[difftool]
	prompt = false
[color]
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = green bold
	changed = cyan
	untracked = magenta reverse
[mergetool "p4merge_pb"]
	cmd = .github/p4merge/p4merge.exe $BASE $LOCAL $REMOTE $MERGED
[maintenance]
	auto = false
